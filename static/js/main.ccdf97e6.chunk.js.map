{"version":3,"sources":["redux/blockchain/blockchainReducer.js","redux/data/dataReducer.js","redux/store.js","redux/data/dataActions.js","redux/blockchain/blockchainActions.js","styles/globalStyles.js","App.js","reportWebVitals.js","index.js"],"names":["initialState","loading","account","isTransferApproved","nftCount","nftsInAccount","nftCountNew","nftsInAccountNew","smartContract","smartContractChanger","web3","errorMsg","blockchainReducer","state","action","type","payload","smartContractNew","totalSupply","cost","error","dataReducer","rootReducer","combineReducers","blockchain","data","middleware","thunk","composeEnhancers","compose","applyMiddleware","store","createStore","fetchDataFailed","fetchData","dispatch","a","getState","methods","call","console","log","connectFailed","getNftCount","SmartContractObj","balanceOf","to","_address","getNftbyIndex","nftId","tokenOfOwnerByIndex","getNftCountNew","SmartContractNewObj","getNftbyIndexNew","ChangerContract","isApprovedForAll","connect","fetch","headers","Accept","abiResponse","abiResponseNew","abiChangerResponse","json","abi","abiChangerContract","configResponse","CONFIG","window","ethereum","isMetaMask","Web3EthContract","setProvider","Web3","request","method","accounts","NETWORK","ID","CONTRACT_ADDRESS","CONTRACT_ADDRESS_NEW","SmartContractChangerObj","CONTRACT_CHANGER_ADDRESS","then","transferApproved","i","push","on","location","reload","NAME","Screen","styled","div","image","SpacerSmall","SpacerMedium","SpacerLarge","Container","flex","fd","jc","ai","test","TextTitle","p","TextDescription","truncate","input","len","length","substring","StyledButton","button","StyledButtonDisabled","ResponsiveWrapper","StyledLogo","img","StyledLink","App","useDispatch","useSelector","useState","setFeedback","setApprovingNFT","feedbackApproving","setFeedbackApproving","SCAN_LINK","SYMBOL","GAS_LIMIT","SHOW_BACKGROUND","SET_CONFIG","getData","getConfig","config","useEffect","style","padding","backgroundColor","alt","src","borderRadius","border","boxShadow","textAlign","color","onClick","e","preventDefault","disabled","setApprovalForAll","send","gasLimit","String","from","once","err","receipt","fontSize","fontWeight","Number","map","id","nftID","changeContract","width","target","href","SCAN_LINK_NEW","SCAN_LINK_MIGRATION","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","document","getElementById"],"mappings":"wwBAAMA,EAAe,CACnBC,SAAS,EACTC,QAAS,KACTC,oBAAoB,EACpBC,SAAU,EACVC,cAAe,GACfC,YAAa,EACbC,iBAAkB,GAClBC,cAAe,KACfC,qBAAsB,KACtBC,KAAM,KACNC,SAAU,IA8CGC,EA3CW,WAAmC,IAAlCC,EAAiC,uDAAzBb,EAAcc,EAAW,uCAC1D,OAAQA,EAAOC,MACb,IAAK,qBACH,OAAO,2BACFf,GADL,IAEEC,SAAS,IAEb,IAAK,qBACH,OAAO,2BACFY,GADL,IAEEZ,SAAS,EACTC,QAASY,EAAOE,QAAQd,QACxBC,mBAAoBW,EAAOE,QAAQb,mBACnCC,SAAUU,EAAOE,QAAQZ,SACzBC,cAAeS,EAAOE,QAAQX,cAC9BC,YAAaQ,EAAOE,QAAQV,YAC5BC,iBAAkBO,EAAOE,QAAQT,iBACjCC,cAAeM,EAAOE,QAAQR,cAC9BS,iBAAkBH,EAAOE,QAAQC,iBACjCR,qBAAsBK,EAAOE,QAAQP,qBACrCC,KAAMI,EAAOE,QAAQN,OAEzB,IAAK,oBACH,OAAO,2BACFV,GADL,IAEEC,SAAS,EACTU,SAAUG,EAAOE,UAErB,IAAK,iBACH,OAAO,2BACFH,GADL,IAEEX,QAASY,EAAOE,QAAQd,QACxBC,mBAAoBW,EAAOE,QAAQb,mBACnCC,SAAUU,EAAOE,QAAQZ,SACzBC,cAAeS,EAAOE,QAAQX,cAC9BC,YAAaQ,EAAOE,QAAQV,YAC5BC,iBAAkBO,EAAOE,QAAQT,mBAErC,QACE,OAAOM,ICrDPb,EAAe,CACnBC,SAAS,EACTiB,YAAa,EACbC,KAAM,EACNC,OAAO,EACPT,SAAU,IAiCGU,EA9BK,WAAmC,IAAlCR,EAAiC,uDAAzBb,EAAcc,EAAW,uCACpD,OAAQA,EAAOC,MACb,IAAK,qBACH,OAAO,2BACFF,GADL,IAEEZ,SAAS,EACTmB,OAAO,EACPT,SAAU,KAEd,IAAK,qBACH,OAAO,2BACFE,GADL,IAEEZ,SAAS,EACTiB,YAAaJ,EAAOE,QAAQE,YAE5BE,OAAO,EACPT,SAAU,KAEd,IAAK,oBACH,OAAO,2BACFX,GADL,IAEEC,SAAS,EACTmB,OAAO,EACPT,SAAUG,EAAOE,UAErB,QACE,OAAOH,IC7BPS,EAAcC,YAAgB,CAClCC,WAAYZ,EACZa,KAAMJ,IAGFK,EAAa,CAACC,KACdC,EAAmBC,YAAQC,IAAe,WAAf,EAAmBJ,IAQrCK,EALNC,YAAYV,EAAaM,GCE5BK,EAAkB,SAACjB,GACvB,MAAO,CACLD,KAAM,oBACNC,QAASA,IAIAkB,EAAY,WACvB,8CAAO,WAAOC,GAAP,eAAAC,EAAA,6DACLD,EArBK,CACLpB,KAAM,uBAmBD,kBAGqBgB,EACrBM,WACAb,WAAWhB,cAAc8B,QAAQpB,cACjCqB,OANA,OAGCrB,EAHD,OAYHiB,EA1BG,CACLpB,KAAM,qBACNC,QAyBqB,CACfE,iBAdD,gDAmBHsB,QAAQC,IAAR,MACAN,EAASF,EAAgB,uCApBtB,yDAAP,uDCLIS,EAAgB,SAAC1B,GACrB,MAAO,CACLD,KAAM,oBACNC,QAASA,IAWP2B,EAAc,SAACC,EAAkB1C,GACrC,OAAO0C,EAAiBN,QACrBO,UAAU3C,GACVqC,KAAK,CAAEO,GAAIF,EAAiBG,YAG3BC,EAAgB,SAACJ,EAAkB1C,EAAS+C,GAChD,OAAOL,EAAiBN,QACrBY,oBAAoBhD,EAAS+C,GAC7BV,KAAK,CAAEO,GAAIF,EAAiBG,YAG3BI,EAAiB,SAACC,EAAqBlD,GAC3C,OAAOkD,EAAoBd,QACxBO,UAAU3C,GACVqC,KAAK,CAAEO,GAAIM,EAAoBL,YAG9BM,EAAmB,SAACD,EAAqBlD,EAAS+C,GACtD,OAAOG,EAAoBd,QACxBY,oBAAoBhD,EAAS+C,GAC7BV,KAAK,CAAEO,GAAIM,EAAoBL,YAG9B5C,EAAqB,SAACyC,EAAkB1C,EAASoD,GACrD,OAAOV,EAAiBN,QACrBiB,iBAAiBrD,EAASoD,GAC1Bf,KAAK,CAAEO,GAAIF,EAAiBG,YAGpBS,EAAU,WACrB,8CAAO,WAAOrB,GAAP,uDAAAC,EAAA,6DACLD,EA1DK,CACLpB,KAAM,uBAwDD,SAEqB0C,MAAM,mBAAoB,CAClDC,QAAS,CACP,eAAgB,mBAChBC,OAAQ,sBALP,cAECC,EAFD,gBAQwBH,MAAM,sBAAuB,CACxDC,QAAS,CACP,eAAgB,mBAChBC,OAAQ,sBAXP,cAQCE,EARD,gBAc4BJ,MAAM,0BAA2B,CAChEC,QAAS,CACP,eAAgB,mBAChBC,OAAQ,sBAjBP,cAcCG,EAdD,iBAoBaF,EAAYG,OApBzB,eAoBCC,EApBD,iBAqBgBH,EAAeE,OArB/B,gCAsB4BD,EAAmBC,OAtB/C,eAsBCE,EAtBD,iBAuBwBR,MAAM,sBAAuB,CACxDC,QAAS,CACP,eAAgB,mBAChBC,OAAQ,sBA1BP,eAuBCO,EAvBD,iBA6BgBA,EAAeH,OA7B/B,WA6BCI,EA7BD,SA8BgBC,OAAbC,EA9BH,EA8BGA,WACoBA,GAAYA,EAASC,YA/B5C,wBAiCHC,IAAgBC,YAAYH,GACxB3D,EAAO,IAAI+D,IAAKJ,GAlCjB,oBAoCsBA,EAASK,QAAQ,CACtCC,OAAQ,wBArCT,eAoCKC,EApCL,iBAuCuBP,EAASK,QAAQ,CACvCC,OAAQ,gBAxCT,mBA0CgBR,EAAOU,QAAQC,GA1C/B,wBA2COlC,EAAmB,IAAI2B,IAC3BP,EACAG,EAAOY,kBAEH3B,EAAsB,IAAImB,IAC9BP,EACAG,EAAOa,sBAGHC,EAA0B,IAAIV,IAClCN,EACAE,EAAOe,0BAtDV,UAyDgC/E,EAC7ByC,EACAgC,EAAS,GACTT,EAAOe,0BACPC,OA7DH,eAyDOC,EAzDP,iBA+DwBzC,EACrBC,EACAgC,EAAS,IACTO,OAlEH,QA+DO/E,EA/DP,OAoEKC,EAAgB,GACXgF,EAAI,EArEd,aAqEiBA,EAAIjF,GArErB,6BAsEGC,EAtEH,UAuEW2C,EAAcJ,EAAkBgC,EAAS,GAAIS,GAAGF,OAvE3D,yBAsEiBG,KAtEjB,wBAqE+BD,IArE/B,yCA2E2BlC,EACxBC,EACAwB,EAAS,IACTO,OA9EH,QA2EO7E,EA3EP,OAgFKC,EAAmB,GACd8E,EAAI,EAjFd,aAiFiBA,EAAI/E,GAjFrB,6BAkFGC,EAlFH,UAmFW8C,EAAiBD,EAAqBwB,EAAS,GAAIS,GAAGF,OAnFjE,yBAkFoBG,KAlFpB,wBAiFkCD,IAjFlC,wBAsFClD,EAzID,CACLpB,KAAM,qBACNC,QAwIuB,CACbd,QAAS0E,EAAS,GAClBzE,mBAAoBiF,EACpBhF,SAAUA,EACVC,cAAeA,EACfC,YAAaA,EACbC,iBAAkBA,EAClBC,cAAeoC,EACf3B,iBAAkBmC,EAClB3C,qBAAsBwE,EACtBvE,KAAMA,KAIV2D,EAASkB,GAAG,mBAAmB,SAACX,GAE9BR,OAAOoB,SAASC,YAElBpB,EAASkB,GAAG,gBAAgB,WAC1BnB,OAAOoB,SAASC,YA1GnB,wBA8GCtD,EAASO,EAAc,qBAAD,OAAsByB,EAAOU,QAAQa,KAArC,OA9GvB,2DAiHDvD,EAASO,EAAc,0BAjHtB,gCAoHHP,EAASO,EAAc,sBApHpB,2DAAP,uD,QC7DWiD,GAASC,IAAOC,IAAV,yOAEG,gBAAGC,EAAH,EAAGA,MAAH,OAAgBA,EAAK,cAAUA,EAAV,KAAqB,UAgBnDC,IANeH,IAAOC,IAAV,2DAMED,IAAOC,IAAV,8DAMXG,GAAeJ,IAAOC,IAAV,6DAMZI,GAAcL,IAAOC,IAAV,6DAMXK,GAAYN,IAAOC,IAAV,iQAEZ,gBAAGM,EAAH,EAAGA,KAAH,OAAeA,GAAc,KACnB,gBAAGC,EAAH,EAAGA,GAAH,OAAaA,GAAU,YACtB,gBAAGC,EAAH,EAAGA,GAAH,OAAaA,GAAU,gBAC3B,gBAAGC,EAAH,EAAGA,GAAH,OAAaA,GAAU,gBAClB,qBAAGC,KAAmB,OAAS,UAE/B,gBAAGT,EAAH,EAAGA,MAAH,OAAgBA,EAAK,cAAUA,EAAV,KAAqB,UAKnDU,GAAYZ,IAAOa,EAAV,yHAaTC,IANed,IAAOa,EAAV,oGAMMb,IAAOa,EAAV,qG,IAMGb,IAAOC,IAAV,iE,MC1DtBc,GAAW,SAACC,EAAOC,GAAR,OACfD,EAAME,OAASD,EAAf,UAAwBD,EAAMG,UAAU,EAAGF,GAA3C,OAAuDD,GAE5CI,GAAepB,IAAOqB,OAAV,2gBAoBZC,GAAuBtB,IAAOqB,OAAV,mgBA6CpBE,IAzBoBvB,IAAOqB,OAAV,inBAyBGrB,IAAOC,IAAV,8NAYjBuB,GAAaxB,IAAOyB,IAAV,2JAwBVC,IAfY1B,IAAOyB,IAAV,+UAeIzB,IAAOxD,EAAV,sFAqeRmF,OAhef,WACE,IAAMpF,EAAWqF,cACXhG,EAAaiG,aAAY,SAAC5G,GAAD,OAAWA,EAAMW,cAEhD,GADaiG,aAAY,SAAC5G,GAAD,OAAWA,EAAMY,QACViG,mBAAS,gCAAzC,mBAAiBC,GAAjB,WACA,EAAwCD,mBAAS,oBAAjD,mBAAqBE,GAArB,WAEA,EAAkDF,mBAAS,6CAA3D,mBAAOG,EAAP,KAA0BC,EAA1B,KAIA,EAA6BJ,mBAAS,CACpC3C,iBAAkB,GAClBC,qBAAsB,GACtBE,yBAA0B,GAC1B6C,UAAW,GACXlD,QAAS,CACPa,KAAM,GACNsC,OAAQ,GACRlD,GAAI,GAENmD,UAAW,EACXC,iBAAiB,IAXnB,mBAAO/D,EAAP,KAAegE,EAAf,KA0CMC,EAAU,WACa,KAAvB5G,EAAWtB,SAA+C,OAA7BsB,EAAWhB,eAC1C2B,EAASD,EAAUV,EAAWtB,WAI5BmI,EAAS,uCAAG,8BAAAjG,EAAA,sEACaqB,MAAM,sBAAuB,CACxDC,QAAS,CACP,eAAgB,mBAChBC,OAAQ,sBAJI,cACVO,EADU,gBAOKA,EAAeH,OAPpB,OAOVuE,EAPU,OAQhBH,EAAWG,GARK,2CAAH,qDAwCf,OA7BAC,qBAAU,WACRF,MACC,IAEHE,qBAAU,WACRH,MACC,CAAC5G,EAAWtB,UAwBb,eAAC,GAAD,UACE,gBAAC,GAAD,CACEiG,KAAM,EACNG,GAAI,SACJkC,MAAO,CAAEC,QAAS,GAAIC,gBAAiB,kBACvC5C,MAAO3B,EAAO+D,gBAAkB,wBAA0B,KAJ5D,UAME,eAACd,GAAD,CAAYuB,IAAK,OAAQC,IAAK,4BAC9B,eAAC,GAAD,IACA,gBAACzB,GAAD,CAAmBhB,KAAM,EAAGqC,MAAO,CAAEC,QAAS,IAAMlC,MAAI,EAAxD,UACE,eAAC,GAAD,CAAaJ,KAAM,EAAGE,GAAI,SAAUC,GAAI,WACxC,eAAC,GAAD,IACA,gBAAC,GAAD,CACEH,KAAM,EACNE,GAAI,SACJC,GAAI,SACJkC,MAAO,CACLE,gBAAiB,gBACjBD,QAAS,GACTI,aAAc,GACdC,OAAQ,8BACRC,UAAW,oCATf,UAYE,eAAC,GAAD,CACEP,MAAO,CAAEQ,UAAW,SAAUC,MAAO,sBADvC,oBAKA,eAAC,GAAD,CACET,MAAO,CACLQ,UAAW,SACXC,MAAO,sBAHX,kCAQA,eAAC,GAAD,IACwB,KAAvBzH,EAAWtB,SAA+C,OAA7BsB,EAAWhB,cACvC,gBAAC,GAAD,CAAa8F,GAAI,SAAUD,GAAI,SAA/B,UACE,gBAAC,GAAD,CACEmC,MAAO,CACLQ,UAAW,SACXC,MAAO,sBAHX,4BAMkB9E,EAAOU,QAAQa,KANjC,cAQA,eAAC,GAAD,IACA,eAACsB,GAAD,CACEkC,QAAS,SAACC,GACRA,EAAEC,iBACFjH,EAASqB,KACT4E,KAJJ,qBASyB,KAAxB5G,EAAWb,SACV,uCACE,eAAC,GAAD,IACA,eAAC,GAAD,CACE6H,MAAO,CACLQ,UAAW,SACXC,MAAO,sBAHX,SAMGzH,EAAWb,cAGd,QAGN,uCACE,gBAAC,GAAD,CACE6H,MAAO,CACLQ,UAAW,SACXC,MAAO,sBAHX,8BAMoB9E,EAAOU,QAAQa,KANnC,wBAM8D,IAC3DlE,EAAWtB,WAGd,eAAC,GAAD,OAIJ,eAAC,GAAD,OAGF,eAAC,GAAD,IAEA,gBAAC,GAAD,CACEiG,KAAM,EACNE,GAAI,SACJC,GAAI,SACJkC,MAAO,CACLE,gBAAiB,gBACjBD,QAAS,GACTI,aAAc,GACdC,OAAQ,8BACRC,UAAW,oCATf,UAYE,eAAC,GAAD,CACEP,MAAO,CAAEQ,UAAW,SAAUC,MAAO,sBADvC,oBAKA,eAAC,GAAD,IACwB,KAAvBzH,EAAWtB,SAA+C,OAA7BsB,EAAWhB,cACvC,gBAAC,GAAD,CAAa8F,GAAI,SAAUD,GAAI,SAA/B,UACE,eAAC,GAAD,IACA,eAAC,GAAD,CACEmC,MAAO,CACLQ,UAAW,SACXC,MAAO,sBAHX,SAMGpB,IAEH,eAAC,GAAD,OAGF,uCACE,eAAC,GAAD,CACEW,MAAO,CACLQ,UAAW,SACXC,MAAO,sBAHX,SAMGzH,EAAWrB,mBACR,8BACA0H,IAEN,eAAC,GAAD,IAEA,eAAC,GAAD,CAAavB,GAAI,SAAUD,GAAI,SAAUD,GAAI,MAA7C,SACG5E,EAAWrB,mBACV,qCACE,eAAC+G,GAAD,CAAsBmC,SAAU,EAAhC,wBAKF,qCACE,eAACrC,GAAD,CACEkC,QAAS,SAACC,GACR3G,QAAQC,IAAIjB,GACZ2H,EAAEC,iBAhOxBtB,EAAqB,4BACrBF,EAAgB,aAChBpG,EAAWhB,cAAc8B,QACtBgH,kBAAkBnF,EAAOe,0BAA0B,GACnDqE,KAAK,CACJC,SAAUC,OAAOtF,EAAO8D,WACxBnF,GAAIqB,EAAOY,iBACX2E,KAAMlI,EAAWtB,UAElByJ,KAAK,SAAS,SAACC,GACdpH,QAAQC,IAAImH,GACZ9B,EACE,uDAEFF,EAAgB,uBAEjBzC,MAAK,SAAC0E,GACLrH,QAAQC,IAAIoH,GACZ/B,EAAqB,0GAGrBF,EAAgB,YAChBzF,EAASqB,KACTrB,EAASD,EAAUV,EAAWtB,aA2MZkI,KALJ,4BAgBV,eAAC,GAAD,OAGF,eAAC,GAAD,IAEA,eAAC,GAAD,CAAajC,KAAM,EAAGE,GAAI,SAAUC,GAAI,cAG1C,gBAACa,GAAD,CAAmBhB,KAAM,EAAGqC,MAAO,CAAEC,QAAS,IAAMlC,MAAI,EAAxD,UACE,eAAC,GAAD,IACA,eAAC,GAAD,IACA,gBAAC,GAAD,CACEJ,KAAM,EACNE,GAAI,SACJC,GAAI,SACJkC,MAAO,CACLE,gBAAiB,gBACjBD,QAAS,GACTI,aAAc,GACdC,OAAQ,8BACRC,UAAW,oCATf,UAYE,eAAC,GAAD,CACEP,MAAO,CAAEQ,UAAW,SAAUC,MAAO,sBADvC,gDAKA,eAAC,GAAD,IACA,gBAAC,GAAD,CACET,MAAO,CACLQ,UAAW,SACXc,SAAU,GACVC,WAAY,OACZd,MAAO,sBALX,0BAQgBe,OAAOxI,EAAWpB,UARlC,KAQ+C,IAC5C4J,OAAOxI,EAAWpB,UAAY4J,OAAOxI,EAAWlB,gBAG3B,KAAvBkB,EAAWtB,SAA+C,OAA7BsB,EAAWhB,cACvC,eAAC,GAAD,CAAa8F,GAAI,SAAUD,GAAI,SAA/B,SAC2B,KAAxB7E,EAAWb,SACV,uCACE,eAAC,GAAD,IACA,eAAC,GAAD,CACE6H,MAAO,CACLQ,UAAW,SACXC,MAAO,sBAHX,SAMGzH,EAAWb,cAGd,OAGN,uCACE,eAAC,GAAD,IACA,gBAAC,GAAD,CAAa2F,GAAI,SAAUD,GAAI,SAAUD,GAAI,MAA7C,UACE,eAAC,GAAD,IAEA,eAAC,GAAD,OAEF,eAAC,GAAD,IACA,eAAC,GAAD,CAAaE,GAAI,SAAUD,GAAI,SAAUD,GAAI,MAA7C,SACG5E,EAAWrB,mBACV,qCACGqB,EAAWnB,cAAc4J,KAAI,SAACC,GAAD,OAC5B,eAAClD,GAAD,CAEEkC,QAAS,SAACC,GAjQhB,IAACgB,IAkQiBD,EAjQlCvC,EAAY,6BACZnG,EAAWf,qBAAqB6B,QAC7B8H,eAAeJ,OAAOG,IACtBZ,KAAK,CACJzG,GAAIqB,EAAOe,yBACXwE,KAAMlI,EAAWtB,QACjBsJ,SAAUC,OAAOtF,EAAO8D,aAEzB0B,KAAK,SAAS,SAACC,GACdpH,QAAQC,IAAImH,GACZjC,EAAY,0DAEbxC,MAAK,SAAC0E,GACLlC,EAAY,SACZxF,EAASqB,KACTrB,EAASD,EAAUV,EAAWtB,UAC9BsC,QAAQC,IAAIoH,OA8OI,SAMGK,GALIA,QAUX,uCACE,eAAC,GAAD,CACE5D,GAAI,SACJD,GAAI,SACJD,GAAI,QAGL5E,EAAWnB,cAAc4J,KAAI,SAACC,GAAD,OAC5B,eAAChD,GAAD,CAA+BmC,SAAS,IAAxC,SACGa,GADwBA,cAUvC,eAAC,GAAD,OAGF,eAAC,GAAD,IACA,gBAAC,GAAD,CACE/D,KAAM,EACNE,GAAI,SACJC,GAAI,SACJkC,MAAO,CACLE,gBAAiB,gBACjBD,QAAS,GACTI,aAAc,GACdC,OAAQ,8BACRC,UAAW,oCATf,UAYE,eAAC,GAAD,CACEP,MAAO,CAAEQ,UAAW,SAAUC,MAAO,sBADvC,uDAKA,eAAC,GAAD,IACA,gBAAC,GAAD,CACET,MAAO,CACLQ,UAAW,SACXc,SAAU,GACVC,WAAY,OACZd,MAAO,sBALX,sBAQYe,OAAOxI,EAAWlB,aAR9B,KAQ8C,IAC3C0J,OAAOxI,EAAWpB,UAAY4J,OAAOxI,EAAWlB,gBAG3B,KAAvBkB,EAAWtB,SAA+C,OAA7BsB,EAAWhB,cACvC,eAAC,GAAD,CAAa8F,GAAI,SAAUD,GAAI,SAA/B,SAC2B,KAAxB7E,EAAWb,SACV,uCACE,eAAC,GAAD,IACA,eAAC,GAAD,CACE6H,MAAO,CACLQ,UAAW,SACXC,MAAO,sBAHX,SAMGzH,EAAWb,cAGd,OAGN,uCACE,eAAC,GAAD,IACA,gBAAC,GAAD,CAAa2F,GAAI,SAAUD,GAAI,SAAUD,GAAI,MAA7C,UACE,eAAC,GAAD,IAEA,eAAC,GAAD,OAEF,eAAC,GAAD,IACA,eAAC,GAAD,CAAaE,GAAI,SAAUD,GAAI,SAAUD,GAAI,MAA7C,SACG5E,EAAWjB,iBAAiB0J,KAAI,SAACC,GAAD,OAC/B,eAAChD,GAAD,CAA+BmC,SAAS,IAAxC,SACGa,GADwBA,WAQnC,eAAC,GAAD,UAGJ,eAAC,GAAD,IACA,gBAAC,GAAD,CAAa7D,GAAI,SAAUC,GAAI,SAAUkC,MAAO,CAAE6B,MAAO,OAAzD,UACE,gBAAC,GAAD,CACE7B,MAAO,CACLQ,UAAW,SACXC,MAAO,yBAHX,mCAMyB,IACvB,eAAC3B,GAAD,CAAYgD,OAAQ,SAAUC,KAAMpG,EAAO4D,UAA3C,SACGpB,GAASxC,EAAOY,iBAAkB,SAGvC,eAAC,GAAD,IAEA,gBAAC,GAAD,CACEyD,MAAO,CACLQ,UAAW,SACXC,MAAO,yBAHX,mCAMyB,IACvB,eAAC3B,GAAD,CAAYgD,OAAQ,SAAUC,KAAMpG,EAAOqG,cAA3C,SACG7D,GAASxC,EAAOa,qBAAsB,SAG3C,eAAC,GAAD,IAEA,gBAAC,GAAD,CACEwD,MAAO,CACLQ,UAAW,SACXC,MAAO,yBAHX,qCAM2B,IACzB,eAAC3B,GAAD,CAAYgD,OAAQ,SAAUC,KAAMpG,EAAOsG,oBAA3C,SACG9D,GAASxC,EAAOe,yBAA0B,SAG/C,eAAC,GAAD,aCvkBKwF,GAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,8BAAqBzF,MAAK,YAAkD,IAA/C0F,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOF,GACPG,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAQN,O,OCCdO,IAASC,OACP,eAAC,IAAD,CAAUpJ,MAAOA,EAAjB,SACE,eAAC,GAAD,MAEFqJ,SAASC,eAAe,SAM1BX,O","file":"static/js/main.ccdf97e6.chunk.js","sourcesContent":["const initialState = {\n  loading: false,\n  account: null,\n  isTransferApproved: false,\n  nftCount: 0,\n  nftsInAccount: [],\n  nftCountNew: 0,\n  nftsInAccountNew: [],\n  smartContract: null,\n  smartContractChanger: null,\n  web3: null,\n  errorMsg: \"\",\n};\n\nconst blockchainReducer = (state = initialState, action) => {\n  switch (action.type) {\n    case \"CONNECTION_REQUEST\":\n      return {\n        ...initialState,\n        loading: true,\n      };\n    case \"CONNECTION_SUCCESS\":\n      return {\n        ...state,\n        loading: false,\n        account: action.payload.account,\n        isTransferApproved: action.payload.isTransferApproved,\n        nftCount: action.payload.nftCount,\n        nftsInAccount: action.payload.nftsInAccount,\n        nftCountNew: action.payload.nftCountNew,\n        nftsInAccountNew: action.payload.nftsInAccountNew,\n        smartContract: action.payload.smartContract,\n        smartContractNew: action.payload.smartContractNew,\n        smartContractChanger: action.payload.smartContractChanger,\n        web3: action.payload.web3,\n      };\n    case \"CONNECTION_FAILED\":\n      return {\n        ...initialState,\n        loading: false,\n        errorMsg: action.payload,\n      };\n    case \"UPDATE_ACCOUNT\":\n      return {\n        ...state,\n        account: action.payload.account,\n        isTransferApproved: action.payload.isTransferApproved,\n        nftCount: action.payload.nftCount,\n        nftsInAccount: action.payload.nftsInAccount,\n        nftCountNew: action.payload.nftCountNew,\n        nftsInAccountNew: action.payload.nftsInAccountNew,\n      };\n    default:\n      return state;\n  }\n};\n\nexport default blockchainReducer;\n","const initialState = {\n  loading: false,\n  totalSupply: 0,\n  cost: 0,\n  error: false,\n  errorMsg: \"\",\n};\n\nconst dataReducer = (state = initialState, action) => {\n  switch (action.type) {\n    case \"CHECK_DATA_REQUEST\":\n      return {\n        ...state,\n        loading: true,\n        error: false,\n        errorMsg: \"\",\n      };\n    case \"CHECK_DATA_SUCCESS\":\n      return {\n        ...state,\n        loading: false,\n        totalSupply: action.payload.totalSupply,\n        // cost: action.payload.cost,\n        error: false,\n        errorMsg: \"\",\n      };\n    case \"CHECK_DATA_FAILED\":\n      return {\n        ...initialState,\n        loading: false,\n        error: true,\n        errorMsg: action.payload,\n      };\n    default:\n      return state;\n  }\n};\n\nexport default dataReducer;\n","import { applyMiddleware, compose, createStore, combineReducers } from \"redux\";\nimport thunk from \"redux-thunk\";\nimport blockchainReducer from \"./blockchain/blockchainReducer\";\nimport dataReducer from \"./data/dataReducer\";\n\nconst rootReducer = combineReducers({\n  blockchain: blockchainReducer,\n  data: dataReducer,\n});\n\nconst middleware = [thunk];\nconst composeEnhancers = compose(applyMiddleware(...middleware));\n\nconst configureStore = () => {\n  return createStore(rootReducer, composeEnhancers);\n};\n\nconst store = configureStore();\n\nexport default store;\n","// log\nimport store from \"../store\";\n\nconst fetchDataRequest = () => {\n  return {\n    type: \"CHECK_DATA_REQUEST\",\n  };\n};\n\nconst fetchDataSuccess = (payload) => {\n  return {\n    type: \"CHECK_DATA_SUCCESS\",\n    payload: payload,\n  };\n};\n\nconst fetchDataFailed = (payload) => {\n  return {\n    type: \"CHECK_DATA_FAILED\",\n    payload: payload,\n  };\n};\n\nexport const fetchData = () => {\n  return async (dispatch) => {\n    dispatch(fetchDataRequest());\n    try {\n      let totalSupply = await store\n        .getState()\n        .blockchain.smartContract.methods.totalSupply()\n        .call();\n      // let cost = await store\n      //   .getState()\n      //   .blockchain.smartContract.methods.cost()\n      //   .call();\n\n      dispatch(\n        fetchDataSuccess({\n          totalSupply,\n          // cost,\n        })\n      );\n    } catch (err) {\n      console.log(err);\n      dispatch(fetchDataFailed(\"Could not load data from contract.\"));\n    }\n  };\n};\n","// constants\nimport Web3EthContract from \"web3-eth-contract\";\nimport Web3 from \"web3\";\n// log\nimport { fetchData } from \"../data/dataActions\";\n\nconst connectRequest = () => {\n  return {\n    type: \"CONNECTION_REQUEST\",\n  };\n};\n\nconst connectSuccess = (payload) => {\n  return {\n    type: \"CONNECTION_SUCCESS\",\n    payload: payload,\n  };\n};\n\nconst connectFailed = (payload) => {\n  return {\n    type: \"CONNECTION_FAILED\",\n    payload: payload,\n  };\n};\n\n//const updateAccountRequest = (payload) => {\n//  return {\n//    type: \"UPDATE_ACCOUNT\",\n//    payload: payload,\n//  };\n//};\n\nconst getNftCount = (SmartContractObj, account) => {\n  return SmartContractObj.methods\n    .balanceOf(account)\n    .call({ to: SmartContractObj._address });\n};\n\nconst getNftbyIndex = (SmartContractObj, account, nftId) => {\n  return SmartContractObj.methods\n    .tokenOfOwnerByIndex(account, nftId)\n    .call({ to: SmartContractObj._address });\n};\n\nconst getNftCountNew = (SmartContractNewObj, account) => {\n  return SmartContractNewObj.methods\n    .balanceOf(account)\n    .call({ to: SmartContractNewObj._address });\n};\n\nconst getNftbyIndexNew = (SmartContractNewObj, account, nftId) => {\n  return SmartContractNewObj.methods\n    .tokenOfOwnerByIndex(account, nftId)\n    .call({ to: SmartContractNewObj._address });\n};\n\nconst isTransferApproved = (SmartContractObj, account, ChangerContract) => {\n  return SmartContractObj.methods\n    .isApprovedForAll(account, ChangerContract)\n    .call({ to: SmartContractObj._address });\n};\n\nexport const connect = () => {\n  return async (dispatch) => {\n    dispatch(connectRequest());\n    const abiResponse = await fetch(\"/config/abi.json\", {\n      headers: {\n        \"Content-Type\": \"application/json\",\n        Accept: \"application/json\",\n      },\n    });\n    const abiResponseNew = await fetch(\"/config/abiNew.json\", {\n      headers: {\n        \"Content-Type\": \"application/json\",\n        Accept: \"application/json\",\n      },\n    });\n    const abiChangerResponse = await fetch(\"/config/abiChanger.json\", {\n      headers: {\n        \"Content-Type\": \"application/json\",\n        Accept: \"application/json\",\n      },\n    });\n    const abi = await abiResponse.json();\n    const abiNew = await abiResponseNew.json();\n    const abiChangerContract = await abiChangerResponse.json();\n    const configResponse = await fetch(\"/config/config.json\", {\n      headers: {\n        \"Content-Type\": \"application/json\",\n        Accept: \"application/json\",\n      },\n    });\n    const CONFIG = await configResponse.json();\n    const { ethereum } = window;\n    const metamaskIsInstalled = ethereum && ethereum.isMetaMask;\n    if (metamaskIsInstalled) {\n      Web3EthContract.setProvider(ethereum);\n      let web3 = new Web3(ethereum);\n      try {\n        const accounts = await ethereum.request({\n          method: \"eth_requestAccounts\",\n        });\n        const networkId = await ethereum.request({\n          method: \"net_version\",\n        });\n        if (networkId == CONFIG.NETWORK.ID) {\n          const SmartContractObj = new Web3EthContract(\n            abi,\n            CONFIG.CONTRACT_ADDRESS\n          );\n          const SmartContractNewObj = new Web3EthContract(\n            abi,\n            CONFIG.CONTRACT_ADDRESS_NEW\n          );\n\n          const SmartContractChangerObj = new Web3EthContract(\n            abiChangerContract,\n            CONFIG.CONTRACT_CHANGER_ADDRESS\n          );\n\n          const transferApproved = await isTransferApproved(\n            SmartContractObj,\n            accounts[0],\n            CONFIG.CONTRACT_CHANGER_ADDRESS\n          ).then();\n\n          const nftCount = await getNftCount(\n            SmartContractObj,\n            accounts[0]\n          ).then();\n\n          let nftsInAccount = [];\n          for (let i = 0; i < nftCount; i++) {\n            nftsInAccount.push(\n              await getNftbyIndex(SmartContractObj, accounts[0], i).then()\n            );\n          }\n\n          const nftCountNew = await getNftCountNew(\n            SmartContractNewObj,\n            accounts[0]\n          ).then();\n\n          let nftsInAccountNew = [];\n          for (let i = 0; i < nftCountNew; i++) {\n            nftsInAccountNew.push(\n              await getNftbyIndexNew(SmartContractNewObj, accounts[0], i).then()\n            );\n          }\n          dispatch(\n            connectSuccess({\n              account: accounts[0],\n              isTransferApproved: transferApproved,\n              nftCount: nftCount,\n              nftsInAccount: nftsInAccount,\n              nftCountNew: nftCountNew,\n              nftsInAccountNew: nftsInAccountNew,\n              smartContract: SmartContractObj,\n              smartContractNew: SmartContractNewObj,\n              smartContractChanger: SmartContractChangerObj,\n              web3: web3,\n            })\n          );\n          // Add listeners start\n          ethereum.on(\"accountsChanged\", (accounts) => {\n            //dispatch(updateAccount(accounts[0]));\n            window.location.reload();\n          });\n          ethereum.on(\"chainChanged\", () => {\n            window.location.reload();\n          });\n          // Add listeners end\n        } else {\n          dispatch(connectFailed(`Change network to ${CONFIG.NETWORK.NAME}.`));\n        }\n      } catch (err) {\n        dispatch(connectFailed(\"Something went wrong.\"));\n      }\n    } else {\n      dispatch(connectFailed(\"Install Metamask.\"));\n    }\n  };\n};\n\n//export const updateAccount = (account) => {\n//  return async (dispatch) => {\n//    dispatch(updateAccountRequest({ account: account, nftCount: 99 }));\n//    dispatch(fetchData(account));\n//  };\n//};\n","import styled from \"styled-components\";\n\n// Used for wrapping a page component\nexport const Screen = styled.div`\n  background-color: var(--primary);\n  background-image: ${({ image }) => (image ? `url(${image})` : \"none\")};\n  background-size: cover;\n  background-position: center;\n  width: 100%;\n  min-height: 100vh;\n  display: flex;\n  flex-direction: column;\n`;\n\n// Used for providing space between components\nexport const SpacerXSmall = styled.div`\n  height: 8px;\n  width: 8px;\n`;\n\n// Used for providing space between components\nexport const SpacerSmall = styled.div`\n  height: 16px;\n  width: 16px;\n`;\n\n// Used for providing space between components\nexport const SpacerMedium = styled.div`\n  height: 24px;\n  width: 24px;\n`;\n\n// Used for providing space between components\nexport const SpacerLarge = styled.div`\n  height: 32px;\n  width: 32px;\n`;\n\n// Used for providing a wrapper around a component\nexport const Container = styled.div`\n  display: flex;\n  flex: ${({ flex }) => (flex ? flex : 0)};\n  flex-direction: ${({ fd }) => (fd ? fd : \"column\")};\n  justify-content: ${({ jc }) => (jc ? jc : \"flex-start\")};\n  align-items: ${({ ai }) => (ai ? ai : \"flex-start\")};\n  background-color: ${({ test }) => (test ? \"pink\" : \"none\")};\n  width: 100%;\n  background-image: ${({ image }) => (image ? `url(${image})` : \"none\")};\n  background-size: cover;\n  background-position: center;\n`;\n\nexport const TextTitle = styled.p`\n  color: var(--primary-text);\n  font-size: 22px;\n  font-weight: 500;\n  line-height: 1.6;\n`;\n\nexport const TextSubTitle = styled.p`\n  color: var(--primary-text);\n  font-size: 18px;\n  line-height: 1.6;\n`;\n\nexport const TextDescription = styled.p`\n  color: var(--primary-text);\n  font-size: 16px;\n  line-height: 1.6;\n`;\n\nexport const StyledClickable = styled.div`\n  :active {\n    opacity: 0.6;\n  }\n`;\n","import React, { useEffect, useState, useRef } from \"react\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { connect } from \"./redux/blockchain/blockchainActions\";\nimport { fetchData } from \"./redux/data/dataActions\";\nimport * as s from \"./styles/globalStyles\";\nimport styled from \"styled-components\";\n\n//import store from \"./redux/store\";\n\n//store.subscribe(() => {\n//  console.log(\"Store changed!\", store.getState());\n//});\n\nconst truncate = (input, len) =>\n  input.length > len ? `${input.substring(0, len)}...` : input;\n\nexport const StyledButton = styled.button`\n  padding: 10px;\n  border-radius: 50px;\n  border: none;\n  background-color: var(--secondary);\n  padding: 10px;\n  font-weight: bold;\n  color: var(--secondary-text);\n  width: 100px;\n  cursor: pointer;\n  box-shadow: 0px 6px 0px -2px rgba(250, 250, 250, 0.3);\n  -webkit-box-shadow: 0px 6px 0px -2px rgba(250, 250, 250, 0.3);\n  -moz-box-shadow: 0px 6px 0px -2px rgba(250, 250, 250, 0.3);\n  :active {\n    box-shadow: none;\n    -webkit-box-shadow: none;\n    -moz-box-shadow: none;\n  }\n`;\n\nexport const StyledButtonDisabled = styled.button`\n  padding: 10px;\n  border-radius: 50px;\n  border: none;\n  background-color: #797979;\n  padding: 10px;\n  font-weight: bold;\n  color: var(--secondary-text);\n  width: 100px;\n  cursor: disabled;\n  box-shadow: 0px 6px 0px -2px rgba(250, 250, 250, 0.3);\n  -webkit-box-shadow: 0px 6px 0px -2px rgba(250, 250, 250, 0.3);\n  -moz-box-shadow: 0px 6px 0px -2px rgba(250, 250, 250, 0.3);\n  :active {\n    box-shadow: none;\n    -webkit-box-shadow: none;\n    -moz-box-shadow: none;\n  }\n`;\n\nexport const StyledRoundButton = styled.button`\n  padding: 10px;\n  border-radius: 100%;\n  border: none;\n  background-color: var(--primary);\n  padding: 10px;\n  font-weight: bold;\n  font-size: 15px;\n  color: var(--primary-text);\n  width: 30px;\n  height: 30px;\n  cursor: pointer;\n  display: flex;\n  align-items: center;\n  justify-content: center;\n  box-shadow: 0px 4px 0px -2px rgba(250, 250, 250, 0.3);\n  -webkit-box-shadow: 0px 4px 0px -2px rgba(250, 250, 250, 0.3);\n  -moz-box-shadow: 0px 4px 0px -2px rgba(250, 250, 250, 0.3);\n  :active {\n    box-shadow: none;\n    -webkit-box-shadow: none;\n    -moz-box-shadow: none;\n  }\n`;\n\nexport const ResponsiveWrapper = styled.div`\n  display: flex;\n  flex: 1;\n  flex-direction: column;\n  justify-content: stretched;\n  align-items: stretched;\n  width: 100%;\n  @media (min-width: 767px) {\n    flex-direction: row;\n  }\n`;\n\nexport const StyledLogo = styled.img`\n  width: 200px;\n  @media (min-width: 767px) {\n    width: 300px;\n  }\n  transition: width 0.5s;\n  transition: height 0.5s;\n`;\n\nexport const StyledImg = styled.img`\n  box-shadow: 0px 5px 11px 2px rgba(0, 0, 0, 0.7);\n  border: 4px dashed var(--secondary);\n  background-color: var(--accent);\n  border-radius: 100%;\n  width: 200px;\n  @media (min-width: 900px) {\n    width: 250px;\n  }\n  @media (min-width: 1000px) {\n    width: 300px;\n  }\n  transition: width 0.5s;\n`;\n\nexport const StyledLink = styled.a`\n  color: var(--primary-text);\n  text-decoration: none;\n`;\n\nfunction App() {\n  const dispatch = useDispatch();\n  const blockchain = useSelector((state) => state.blockchain);\n  const data = useSelector((state) => state.data);\n  const [feedback, setFeedback] = useState(`Click buy to mint your NFT.`);\n  const [approvingNFT, setApprovingNFT] = useState(\"Not yet approved\");\n\n  const [feedbackApproving, setFeedbackApproving] = useState(\n    `Approve to send your NFT to new contract.`\n  );\n\n  const [CONFIG, SET_CONFIG] = useState({\n    CONTRACT_ADDRESS: \"\",\n    CONTRACT_ADDRESS_NEW: \"\",\n    CONTRACT_CHANGER_ADDRESS: \"\",\n    SCAN_LINK: \"\",\n    NETWORK: {\n      NAME: \"\",\n      SYMBOL: \"\",\n      ID: 0,\n    },\n    GAS_LIMIT: 0,\n    SHOW_BACKGROUND: false,\n  });\n\n  const approveNFT = () => {\n    setFeedbackApproving(`Approving... Please wait`);\n    setApprovingNFT(\"Approving\");\n    blockchain.smartContract.methods\n      .setApprovalForAll(CONFIG.CONTRACT_CHANGER_ADDRESS, true)\n      .send({\n        gasLimit: String(CONFIG.GAS_LIMIT),\n        to: CONFIG.CONTRACT_ADDRESS,\n        from: blockchain.account,\n      })\n      .once(\"error\", (err) => {\n        console.log(err);\n        setFeedbackApproving(\n          \"Sorry, something went wrong please try again later.\"\n        );\n        setApprovingNFT(\"Not yet approved\");\n      })\n      .then((receipt) => {\n        console.log(receipt);\n        setFeedbackApproving(\n          `Approval is done. You can now send your NFTs from old contract and get the same NFT from new contract.`\n        );\n        setApprovingNFT(\"Approved\");\n        dispatch(connect());\n        dispatch(fetchData(blockchain.account));\n      });\n  };\n\n  const getData = () => {\n    if (blockchain.account !== \"\" && blockchain.smartContract !== null) {\n      dispatch(fetchData(blockchain.account));\n    }\n  };\n\n  const getConfig = async () => {\n    const configResponse = await fetch(\"/config/config.json\", {\n      headers: {\n        \"Content-Type\": \"application/json\",\n        Accept: \"application/json\",\n      },\n    });\n    const config = await configResponse.json();\n    SET_CONFIG(config);\n  };\n\n  useEffect(() => {\n    getConfig();\n  }, []);\n\n  useEffect(() => {\n    getData();\n  }, [blockchain.account]);\n\n  const ChangeNFT = (nftID) => {\n    setFeedback(\"Migrating... Please wait.\");\n    blockchain.smartContractChanger.methods\n      .changeContract(Number(nftID))\n      .send({\n        to: CONFIG.CONTRACT_CHANGER_ADDRESS,\n        from: blockchain.account,\n        gasLimit: String(CONFIG.GAS_LIMIT),\n      })\n      .once(\"error\", (err) => {\n        console.log(err);\n        setFeedback(\"Sorry, something went wrong please try again later.\");\n      })\n      .then((receipt) => {\n        setFeedback(\"Done.\");\n        dispatch(connect());\n        dispatch(fetchData(blockchain.account));\n        console.log(receipt);\n      });\n  };\n\n  return (\n    <s.Screen>\n      <s.Container\n        flex={1}\n        ai={\"center\"}\n        style={{ padding: 24, backgroundColor: \"var(--primary)\" }}\n        image={CONFIG.SHOW_BACKGROUND ? \"/config/images/bg.png\" : null}\n      >\n        <StyledLogo alt={\"logo\"} src={\"/config/images/logo.png\"} />\n        <s.SpacerSmall />\n        <ResponsiveWrapper flex={1} style={{ padding: 24 }} test>\n          <s.Container flex={1} jc={\"center\"} ai={\"center\"}></s.Container>\n          <s.SpacerLarge />\n          <s.Container\n            flex={1}\n            jc={\"center\"}\n            ai={\"center\"}\n            style={{\n              backgroundColor: \"var(--accent)\",\n              padding: 24,\n              borderRadius: 24,\n              border: \"4px dashed var(--secondary)\",\n              boxShadow: \"0px 5px 11px 2px rgba(0,0,0,0.7)\",\n            }}\n          >\n            <s.TextTitle\n              style={{ textAlign: \"center\", color: \"var(--accent-text)\" }}\n            >\n              Step 1\n            </s.TextTitle>\n            <s.TextDescription\n              style={{\n                textAlign: \"center\",\n                color: \"var(--accent-text)\",\n              }}\n            >\n              Connect your account\n            </s.TextDescription>\n            <s.SpacerLarge />\n            {blockchain.account === \"\" || blockchain.smartContract === null ? (\n              <s.Container ai={\"center\"} jc={\"center\"}>\n                <s.TextDescription\n                  style={{\n                    textAlign: \"center\",\n                    color: \"var(--accent-text)\",\n                  }}\n                >\n                  Connect to the {CONFIG.NETWORK.NAME} network\n                </s.TextDescription>\n                <s.SpacerSmall />\n                <StyledButton\n                  onClick={(e) => {\n                    e.preventDefault();\n                    dispatch(connect());\n                    getData();\n                  }}\n                >\n                  CONNECT\n                </StyledButton>\n                {blockchain.errorMsg !== \"\" ? (\n                  <>\n                    <s.SpacerSmall />\n                    <s.TextDescription\n                      style={{\n                        textAlign: \"center\",\n                        color: \"var(--accent-text)\",\n                      }}\n                    >\n                      {blockchain.errorMsg}\n                    </s.TextDescription>\n                  </>\n                ) : null}\n              </s.Container>\n            ) : (\n              <>\n                <s.TextDescription\n                  style={{\n                    textAlign: \"center\",\n                    color: \"var(--accent-text)\",\n                  }}\n                >\n                  Connected to the {CONFIG.NETWORK.NAME} network with account{\" \"}\n                  {blockchain.account}\n                </s.TextDescription>\n\n                <s.SpacerMedium />\n              </>\n            )}\n\n            <s.SpacerMedium />\n          </s.Container>\n\n          <s.SpacerLarge />\n\n          <s.Container\n            flex={1}\n            jc={\"center\"}\n            ai={\"center\"}\n            style={{\n              backgroundColor: \"var(--accent)\",\n              padding: 24,\n              borderRadius: 24,\n              border: \"4px dashed var(--secondary)\",\n              boxShadow: \"0px 5px 11px 2px rgba(0,0,0,0.7)\",\n            }}\n          >\n            <s.TextTitle\n              style={{ textAlign: \"center\", color: \"var(--accent-text)\" }}\n            >\n              Step 2\n            </s.TextTitle>\n            <s.SpacerSmall />\n            {blockchain.account === \"\" || blockchain.smartContract === null ? (\n              <s.Container ai={\"center\"} jc={\"center\"}>\n                <s.SpacerLarge />\n                <s.TextDescription\n                  style={{\n                    textAlign: \"center\",\n                    color: \"var(--accent-text)\",\n                  }}\n                >\n                  {feedbackApproving}\n                </s.TextDescription>\n                <s.SpacerLarge />\n              </s.Container>\n            ) : (\n              <>\n                <s.TextDescription\n                  style={{\n                    textAlign: \"center\",\n                    color: \"var(--accent-text)\",\n                  }}\n                >\n                  {blockchain.isTransferApproved\n                    ? \"Already approved. Do step 3\"\n                    : feedbackApproving}\n                </s.TextDescription>\n                <s.SpacerMedium />\n\n                <s.Container ai={\"center\"} jc={\"center\"} fd={\"row\"}>\n                  {blockchain.isTransferApproved ? (\n                    <>\n                      <StyledButtonDisabled disabled={1}>\n                        Approved\n                      </StyledButtonDisabled>\n                    </>\n                  ) : (\n                    <>\n                      <StyledButton\n                        onClick={(e) => {\n                          console.log(blockchain);\n                          e.preventDefault();\n                          approveNFT();\n                          getData();\n                        }}\n                      >\n                        Approve\n                      </StyledButton>\n                    </>\n                  )}\n                </s.Container>\n              </>\n            )}\n\n            <s.SpacerMedium />\n          </s.Container>\n\n          <s.SpacerLarge />\n\n          <s.Container flex={1} jc={\"center\"} ai={\"center\"}></s.Container>\n        </ResponsiveWrapper>\n\n        <ResponsiveWrapper flex={1} style={{ padding: 24 }} test>\n          <s.SpacerLarge />\n          <s.SpacerLarge />\n          <s.Container\n            flex={2}\n            jc={\"center\"}\n            ai={\"center\"}\n            style={{\n              backgroundColor: \"var(--accent)\",\n              padding: 24,\n              borderRadius: 24,\n              border: \"4px dashed var(--secondary)\",\n              boxShadow: \"0px 5px 11px 2px rgba(0,0,0,0.7)\",\n            }}\n          >\n            <s.TextTitle\n              style={{ textAlign: \"center\", color: \"var(--accent-text)\" }}\n            >\n              Step 3 - Migration to new contract\n            </s.TextTitle>\n            <s.SpacerSmall />\n            <s.TextTitle\n              style={{\n                textAlign: \"center\",\n                fontSize: 50,\n                fontWeight: \"bold\",\n                color: \"var(--accent-text)\",\n              }}\n            >\n              Not Migrated {Number(blockchain.nftCount)} /{\" \"}\n              {Number(blockchain.nftCount) + Number(blockchain.nftCountNew)}\n            </s.TextTitle>\n\n            {blockchain.account === \"\" || blockchain.smartContract === null ? (\n              <s.Container ai={\"center\"} jc={\"center\"}>\n                {blockchain.errorMsg !== \"\" ? (\n                  <>\n                    <s.SpacerSmall />\n                    <s.TextDescription\n                      style={{\n                        textAlign: \"center\",\n                        color: \"var(--accent-text)\",\n                      }}\n                    >\n                      {blockchain.errorMsg}\n                    </s.TextDescription>\n                  </>\n                ) : null}\n              </s.Container>\n            ) : (\n              <>\n                <s.SpacerMedium />\n                <s.Container ai={\"center\"} jc={\"center\"} fd={\"row\"}>\n                  <s.SpacerMedium />\n\n                  <s.SpacerMedium />\n                </s.Container>\n                <s.SpacerSmall />\n                <s.Container ai={\"center\"} jc={\"center\"} fd={\"row\"}>\n                  {blockchain.isTransferApproved ? (\n                    <>\n                      {blockchain.nftsInAccount.map((id) => (\n                        <StyledButton\n                          key={id}\n                          onClick={(e) => {\n                            ChangeNFT(id);\n                          }}\n                        >\n                          {id}\n                        </StyledButton>\n                      ))}\n                    </>\n                  ) : (\n                    <>\n                      <s.Container\n                        ai={\"center\"}\n                        jc={\"center\"}\n                        fd={\"row\"}\n                      ></s.Container>\n\n                      {blockchain.nftsInAccount.map((id) => (\n                        <StyledButtonDisabled key={id} disabled=\"1\">\n                          {id}\n                        </StyledButtonDisabled>\n                      ))}\n                    </>\n                  )}\n                </s.Container>\n              </>\n            )}\n\n            <s.SpacerMedium />\n          </s.Container>\n\n          <s.SpacerLarge />\n          <s.Container\n            flex={2}\n            jc={\"center\"}\n            ai={\"center\"}\n            style={{\n              backgroundColor: \"var(--accent)\",\n              padding: 24,\n              borderRadius: 24,\n              border: \"4px dashed var(--secondary)\",\n              boxShadow: \"0px 5px 11px 2px rgba(0,0,0,0.7)\",\n            }}\n          >\n            <s.TextTitle\n              style={{ textAlign: \"center\", color: \"var(--accent-text)\" }}\n            >\n              NFTs already migrated to the new contract\n            </s.TextTitle>\n            <s.SpacerSmall />\n            <s.TextTitle\n              style={{\n                textAlign: \"center\",\n                fontSize: 50,\n                fontWeight: \"bold\",\n                color: \"var(--accent-text)\",\n              }}\n            >\n              Migrated {Number(blockchain.nftCountNew)} /{\" \"}\n              {Number(blockchain.nftCount) + Number(blockchain.nftCountNew)}\n            </s.TextTitle>\n\n            {blockchain.account === \"\" || blockchain.smartContract === null ? (\n              <s.Container ai={\"center\"} jc={\"center\"}>\n                {blockchain.errorMsg !== \"\" ? (\n                  <>\n                    <s.SpacerSmall />\n                    <s.TextDescription\n                      style={{\n                        textAlign: \"center\",\n                        color: \"var(--accent-text)\",\n                      }}\n                    >\n                      {blockchain.errorMsg}\n                    </s.TextDescription>\n                  </>\n                ) : null}\n              </s.Container>\n            ) : (\n              <>\n                <s.SpacerMedium />\n                <s.Container ai={\"center\"} jc={\"center\"} fd={\"row\"}>\n                  <s.SpacerMedium />\n\n                  <s.SpacerMedium />\n                </s.Container>\n                <s.SpacerSmall />\n                <s.Container ai={\"center\"} jc={\"center\"} fd={\"row\"}>\n                  {blockchain.nftsInAccountNew.map((id) => (\n                    <StyledButtonDisabled key={id} disabled=\"1\">\n                      {id}\n                    </StyledButtonDisabled>\n                  ))}\n                </s.Container>\n              </>\n            )}\n\n            <s.SpacerMedium />\n          </s.Container>\n        </ResponsiveWrapper>\n        <s.SpacerMedium />\n        <s.Container jc={\"center\"} ai={\"center\"} style={{ width: \"70%\" }}>\n          <s.TextDescription\n            style={{\n              textAlign: \"center\",\n              color: \"var(--secondary-text)\",\n            }}\n          >\n            Old NFT smart contract{\" \"}\n            <StyledLink target={\"_blank\"} href={CONFIG.SCAN_LINK}>\n              {truncate(CONFIG.CONTRACT_ADDRESS, 15)}\n            </StyledLink>\n          </s.TextDescription>\n          <s.SpacerSmall />\n\n          <s.TextDescription\n            style={{\n              textAlign: \"center\",\n              color: \"var(--secondary-text)\",\n            }}\n          >\n            New NFT smart contract{\" \"}\n            <StyledLink target={\"_blank\"} href={CONFIG.SCAN_LINK_NEW}>\n              {truncate(CONFIG.CONTRACT_ADDRESS_NEW, 15)}\n            </StyledLink>\n          </s.TextDescription>\n          <s.SpacerSmall />\n\n          <s.TextDescription\n            style={{\n              textAlign: \"center\",\n              color: \"var(--secondary-text)\",\n            }}\n          >\n            Migration smart contract{\" \"}\n            <StyledLink target={\"_blank\"} href={CONFIG.SCAN_LINK_MIGRATION}>\n              {truncate(CONFIG.CONTRACT_CHANGER_ADDRESS, 15)}\n            </StyledLink>\n          </s.TextDescription>\n          <s.SpacerSmall />\n        </s.Container>\n      </s.Container>\n    </s.Screen>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport App from \"./App\";\nimport reportWebVitals from \"./reportWebVitals\";\nimport store from \"./redux/store\";\nimport { Provider } from \"react-redux\";\nimport \"./styles/reset.css\";\n\nReactDOM.render(\n  <Provider store={store}>\n    <App />\n  </Provider>,\n  document.getElementById(\"root\")\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}